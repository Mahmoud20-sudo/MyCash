// Generated by view binder compiler. Do not edit!
package net.geidea.paymentsdk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.geidea.paymentsdk.R;

public final class GdViewSouhoolaInstallmentPlanBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView approxAmountHintTextView;

  @NonNull
  public final TextInputEditText downPaymentAmountEditText;

  @NonNull
  public final TextInputLayout downPaymentAmountInputLayout;

  @NonNull
  public final TextView errorTextView;

  @NonNull
  public final TextView financedAmountErrorTextView;

  @NonNull
  public final TextView financedAmountTextView;

  @NonNull
  public final GridLayout installmentPlanGridLayout;

  @NonNull
  public final GdIncludePayUpfrontBinding payUpfront;

  @NonNull
  public final TextView totalAmountTextView;

  private GdViewSouhoolaInstallmentPlanBinding(@NonNull LinearLayout rootView,
      @NonNull TextView approxAmountHintTextView,
      @NonNull TextInputEditText downPaymentAmountEditText,
      @NonNull TextInputLayout downPaymentAmountInputLayout, @NonNull TextView errorTextView,
      @NonNull TextView financedAmountErrorTextView, @NonNull TextView financedAmountTextView,
      @NonNull GridLayout installmentPlanGridLayout, @NonNull GdIncludePayUpfrontBinding payUpfront,
      @NonNull TextView totalAmountTextView) {
    this.rootView = rootView;
    this.approxAmountHintTextView = approxAmountHintTextView;
    this.downPaymentAmountEditText = downPaymentAmountEditText;
    this.downPaymentAmountInputLayout = downPaymentAmountInputLayout;
    this.errorTextView = errorTextView;
    this.financedAmountErrorTextView = financedAmountErrorTextView;
    this.financedAmountTextView = financedAmountTextView;
    this.installmentPlanGridLayout = installmentPlanGridLayout;
    this.payUpfront = payUpfront;
    this.totalAmountTextView = totalAmountTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GdViewSouhoolaInstallmentPlanBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GdViewSouhoolaInstallmentPlanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.gd_view_souhoola_installment_plan, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GdViewSouhoolaInstallmentPlanBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.approxAmountHintTextView;
      TextView approxAmountHintTextView = ViewBindings.findChildViewById(rootView, id);
      if (approxAmountHintTextView == null) {
        break missingId;
      }

      id = R.id.downPaymentAmountEditText;
      TextInputEditText downPaymentAmountEditText = ViewBindings.findChildViewById(rootView, id);
      if (downPaymentAmountEditText == null) {
        break missingId;
      }

      id = R.id.downPaymentAmountInputLayout;
      TextInputLayout downPaymentAmountInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (downPaymentAmountInputLayout == null) {
        break missingId;
      }

      id = R.id.errorTextView;
      TextView errorTextView = ViewBindings.findChildViewById(rootView, id);
      if (errorTextView == null) {
        break missingId;
      }

      id = R.id.financedAmountErrorTextView;
      TextView financedAmountErrorTextView = ViewBindings.findChildViewById(rootView, id);
      if (financedAmountErrorTextView == null) {
        break missingId;
      }

      id = R.id.financedAmountTextView;
      TextView financedAmountTextView = ViewBindings.findChildViewById(rootView, id);
      if (financedAmountTextView == null) {
        break missingId;
      }

      id = R.id.installmentPlanGridLayout;
      GridLayout installmentPlanGridLayout = ViewBindings.findChildViewById(rootView, id);
      if (installmentPlanGridLayout == null) {
        break missingId;
      }

      id = R.id.payUpfront;
      View payUpfront = ViewBindings.findChildViewById(rootView, id);
      if (payUpfront == null) {
        break missingId;
      }
      GdIncludePayUpfrontBinding binding_payUpfront = GdIncludePayUpfrontBinding.bind(payUpfront);

      id = R.id.totalAmountTextView;
      TextView totalAmountTextView = ViewBindings.findChildViewById(rootView, id);
      if (totalAmountTextView == null) {
        break missingId;
      }

      return new GdViewSouhoolaInstallmentPlanBinding((LinearLayout) rootView,
          approxAmountHintTextView, downPaymentAmountEditText, downPaymentAmountInputLayout,
          errorTextView, financedAmountErrorTextView, financedAmountTextView,
          installmentPlanGridLayout, binding_payUpfront, totalAmountTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
