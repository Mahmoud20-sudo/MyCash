// Generated by view binder compiler. Do not edit!
package net.geidea.paymentsdk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.geidea.paymentsdk.R;
import net.geidea.paymentsdk.ui.widget.PaymentFormView;

public final class GdFragmentCardInputBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final GdIncludeAlternativePmSelectorBinding alternativeMethodSelector;

  @NonNull
  public final GdIncludeAppbarWithStepperBinding appBarWithStepper;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final ImageView bnplLogoImageView;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final WebView initAuthWebView;

  @NonNull
  public final Button payButton;

  @NonNull
  public final TextView payWithCardLabelTextView;

  @NonNull
  public final LinearLayout payWithCardLinearLayout;

  @NonNull
  public final NestedScrollView paymentFormScrollView;

  @NonNull
  public final PaymentFormView paymentFormView;

  private GdFragmentCardInputBinding(@NonNull CoordinatorLayout rootView,
      @NonNull GdIncludeAlternativePmSelectorBinding alternativeMethodSelector,
      @NonNull GdIncludeAppbarWithStepperBinding appBarWithStepper, @NonNull ImageButton backButton,
      @NonNull ImageView bnplLogoImageView, @NonNull Button cancelButton,
      @NonNull CoordinatorLayout coordinatorLayout, @NonNull WebView initAuthWebView,
      @NonNull Button payButton, @NonNull TextView payWithCardLabelTextView,
      @NonNull LinearLayout payWithCardLinearLayout,
      @NonNull NestedScrollView paymentFormScrollView, @NonNull PaymentFormView paymentFormView) {
    this.rootView = rootView;
    this.alternativeMethodSelector = alternativeMethodSelector;
    this.appBarWithStepper = appBarWithStepper;
    this.backButton = backButton;
    this.bnplLogoImageView = bnplLogoImageView;
    this.cancelButton = cancelButton;
    this.coordinatorLayout = coordinatorLayout;
    this.initAuthWebView = initAuthWebView;
    this.payButton = payButton;
    this.payWithCardLabelTextView = payWithCardLabelTextView;
    this.payWithCardLinearLayout = payWithCardLinearLayout;
    this.paymentFormScrollView = paymentFormScrollView;
    this.paymentFormView = paymentFormView;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GdFragmentCardInputBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GdFragmentCardInputBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.gd_fragment_card_input, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GdFragmentCardInputBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alternativeMethodSelector;
      View alternativeMethodSelector = ViewBindings.findChildViewById(rootView, id);
      if (alternativeMethodSelector == null) {
        break missingId;
      }
      GdIncludeAlternativePmSelectorBinding binding_alternativeMethodSelector = GdIncludeAlternativePmSelectorBinding.bind(alternativeMethodSelector);

      id = R.id.appBarWithStepper;
      View appBarWithStepper = ViewBindings.findChildViewById(rootView, id);
      if (appBarWithStepper == null) {
        break missingId;
      }
      GdIncludeAppbarWithStepperBinding binding_appBarWithStepper = GdIncludeAppbarWithStepperBinding.bind(appBarWithStepper);

      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.bnplLogoImageView;
      ImageView bnplLogoImageView = ViewBindings.findChildViewById(rootView, id);
      if (bnplLogoImageView == null) {
        break missingId;
      }

      id = R.id.cancelButton;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      CoordinatorLayout coordinatorLayout = (CoordinatorLayout) rootView;

      id = R.id.initAuthWebView;
      WebView initAuthWebView = ViewBindings.findChildViewById(rootView, id);
      if (initAuthWebView == null) {
        break missingId;
      }

      id = R.id.payButton;
      Button payButton = ViewBindings.findChildViewById(rootView, id);
      if (payButton == null) {
        break missingId;
      }

      id = R.id.payWithCardLabelTextView;
      TextView payWithCardLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (payWithCardLabelTextView == null) {
        break missingId;
      }

      id = R.id.payWithCardLinearLayout;
      LinearLayout payWithCardLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (payWithCardLinearLayout == null) {
        break missingId;
      }

      id = R.id.paymentFormScrollView;
      NestedScrollView paymentFormScrollView = ViewBindings.findChildViewById(rootView, id);
      if (paymentFormScrollView == null) {
        break missingId;
      }

      id = R.id.paymentFormView;
      PaymentFormView paymentFormView = ViewBindings.findChildViewById(rootView, id);
      if (paymentFormView == null) {
        break missingId;
      }

      return new GdFragmentCardInputBinding((CoordinatorLayout) rootView,
          binding_alternativeMethodSelector, binding_appBarWithStepper, backButton,
          bnplLogoImageView, cancelButton, coordinatorLayout, initAuthWebView, payButton,
          payWithCardLabelTextView, payWithCardLinearLayout, paymentFormScrollView,
          paymentFormView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
