// Generated by view binder compiler. Do not edit!
package net.geidea.paymentsdk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.geidea.paymentsdk.R;
import net.geidea.paymentsdk.internal.ui.widget.Stepper;

public final class GdIncludeAppbarWithStepperBinding implements ViewBinding {
  @NonNull
  private final AppBarLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final FrameLayout headerFrameLayout;

  @NonNull
  public final FrameLayout ovalHeaderFrameLayout;

  @NonNull
  public final Stepper stepper;

  @NonNull
  public final MaterialToolbar toolbar;

  private GdIncludeAppbarWithStepperBinding(@NonNull AppBarLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull FrameLayout headerFrameLayout,
      @NonNull FrameLayout ovalHeaderFrameLayout, @NonNull Stepper stepper,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.headerFrameLayout = headerFrameLayout;
    this.ovalHeaderFrameLayout = ovalHeaderFrameLayout;
    this.stepper = stepper;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public AppBarLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GdIncludeAppbarWithStepperBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GdIncludeAppbarWithStepperBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.gd_include_appbar_with_stepper, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GdIncludeAppbarWithStepperBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      AppBarLayout appBarLayout = (AppBarLayout) rootView;

      id = R.id.headerFrameLayout;
      FrameLayout headerFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (headerFrameLayout == null) {
        break missingId;
      }

      id = R.id.ovalHeaderFrameLayout;
      FrameLayout ovalHeaderFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (ovalHeaderFrameLayout == null) {
        break missingId;
      }

      id = R.id.stepper;
      Stepper stepper = ViewBindings.findChildViewById(rootView, id);
      if (stepper == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new GdIncludeAppbarWithStepperBinding((AppBarLayout) rootView, appBarLayout,
          headerFrameLayout, ovalHeaderFrameLayout, stepper, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
